<?php

/**
 * @file
 * Contains pseudo_title.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\NodeType;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Url;
use Drupal\Core\Link;

/**
 * Implements hook_help().
 */
function pseudo_title_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the pseudo_title module.
    case 'help.page.pseudo_title':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Creates a pseudo field title for each content type that can be used to re-arrange the placement of the node title in the Manage Form Display page') . '</p>';
      return $output;
    default:
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function pseudo_title_entity_extra_field_info() {
  $extra = [];
  foreach (NodeType::loadMultiple() as $bundle) {
    $extra['node'][$bundle->Id()]['display']['pseudo_title'] = [
      'label' => t('Pseudo Title'),
      'description' => t('Mirrors the actual node title'),
      'weight' => 100,
      'visible' => FALSE,
    ];
  }
  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function pseudo_title_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($display->getComponent('pseudo_title')) {
    // Retrieve the actual title from the entity.
    $title = $entity->getTitle();
    // Wrap the pseudo title in a link to the entity when the view mode is other
    // than full.
    if ($view_mode != 'full') {
      $id = $entity->id();
      $options = ['absolute' => FALSE];
      $url = Url::fromRoute('entity.node.canonical', ['node' => $id], $options);
      $title = Link::fromTextAndUrl($title, $url);
    }
    // Build the pseudo title.
    $build['pseudo_title'] = [
      // Not using #markup because data attribute name gets mangled.
      // @see https://www.drupal.org/node/2609928
      // '#markup' => $title,
      '#pseudotitle' => $title,
      '#theme' => 'pseudo_title',
    ];
  }
}

/**
 * Implements hook_theme().
 * To add the template definition.
 **/
function pseudo_title_theme($existing, $type, $theme, $path) {
  return [
    'pseudo_title' => [
      'variables' => [
        'pseudotitle' => FALSE,
      ],
    ],
  ];
}
